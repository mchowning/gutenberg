buildscript {
    ext.kotlinVersion = '1.3.61'

    repositories {
        jcenter()
        google()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath 'com.android.tools.build:gradle:3.4.2'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.5'
        // Allows embedding other dependencies into the AAR for this one
        classpath 'com.kezong:fat-aar:1.2.20'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'kotlin-android'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.kezong.fat-aar'

// import the `readReactNativeVersion()` function
apply from: 'https://gist.githubusercontent.com/hypest/742448b9588b3a0aa580a5e80ae95bdf/raw/8eb62d40ee7a5104d2fcaeff21ce6f29bd93b054/readReactNativeVersion.gradle'

// import the `readHashedVersion()` function
apply from: 'https://gist.githubusercontent.com/hypest/ceaf20a8e7d9b8404e4a5ff2e6c36650/raw/e1460a128e4b9863963410d719c7d44c3adefd02/readHashedVersion.gradle'

// import the `waitJitpack()` function
apply from: 'https://gist.githubusercontent.com/hypest/f526fe0775dedce0ce0133f1400d22a4/raw/0008b271a0d28fc79957fd3c2a027f57e98f796a/wait-jitpack.gradle'

group='com.github.wordpress-mobile.gutenberg-mobile'

def hermesOriginalPath = "../../../node_modules/hermes-engine/android/";
def hermesPath = hermesOriginalPath;

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
    }
    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    google()
    jcenter()

    maven { url "https://jitpack.io" }

    if (rootProject.ext.has("buildGutenbergFromSource") && rootProject.ext.buildGutenbergFromSource) {
        // If building from source, use the local sources from node_modules
        //
        // FIXME: The value here expects the build to run when this repo is a
        // submodule of mobile-gutenberg
        def nodeModulesPath = "${project.projectDir }/../../../node_modules/"
        maven { url "${nodeModulesPath}/react-native/android" }
    } else {
        // If not building from source (e.g. Jitpack), use the bintray repo so a local RN setup is not needed
        def reactNativeRepo = 'https://dl.bintray.com/wordpress-mobile/react-native-mirror/'
        println "Will use the RN maven repo at ${reactNativeRepo}"
        maven { url reactNativeRepo }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"

    implementation "org.wordpress:utils:1.22"

    // For animated GIF support
    implementation 'com.facebook.fresco:animated-gif:2.0.0'

    implementation 'com.google.android.material:material:1.2.1'

    if (rootProject.ext.has("buildGutenbergFromSource") && rootProject.ext.buildGutenbergFromSource) {
        println "using gutenberg from source"

        // Embedding Aztec seems to break the build from source when running from
        // the WordPress Android project. That shouldn't be the case. While we
        // investigate, embed only when making a binary build.
        implementation project(':@wordpress_react-native-aztec')

        implementation project(':react-native-linear-gradient')
        implementation project(':react-native-svg')
        implementation project(':react-native-video')
        implementation project(':@react-native-community_slider')
        implementation project(':react-native-get-random-values')
        implementation project(':@react-native-community_masked-view')
        implementation project(':react-native-gesture-handler')
        implementation project(':react-native-screens')
        implementation project(':react-native-safe-area-context')
        implementation project(':react-native-reanimated')

        implementation 'com.facebook.react:react-native:+'
    } else {
        hermesPath = "./vendor/hermes-engine/";

        embed project(':@wordpress_react-native-aztec')

        implementation (waitJitpack('com.github.wordpress-mobile', 'react-native-svg', readHashedVersion('../../react-native-editor/package.json', 'react-native-svg', 'dependencies')))
        implementation (waitJitpack('com.github.wordpress-mobile', 'react-native-video', readHashedVersion('../../react-native-editor/package.json', 'react-native-video', 'dependencies')))
        implementation (waitJitpack('com.github.wordpress-mobile', 'react-native-linear-gradient', readHashedVersion('../../react-native-editor/package.json', 'react-native-linear-gradient', 'dependencies')))
        implementation (waitJitpack('com.github.wordpress-mobile', 'react-native-slider', readHashedVersion('../../react-native-editor/package.json', '@react-native-community/slider', 'dependencies')))
        implementation (waitJitpack('com.github.wordpress-mobile', 'react-native-get-random-values', readHashedVersion('../../react-native-editor/package.json', 'react-native-get-random-values', 'dependencies')))
        implementation (waitJitpack('com.github.wordpress-mobile', 'react-native-masked-view', readHashedVersion('../../react-native-editor/package.json', '@react-native-community/masked-view', 'dependencies')))
        implementation (waitJitpack('com.github.wordpress-mobile', 'react-native-gesture-handler', readHashedVersion('../../react-native-editor/package.json', 'react-native-gesture-handler', 'dependencies')))
        implementation (waitJitpack('com.github.wordpress-mobile', 'react-native-screens', readHashedVersion('../../react-native-editor/package.json', 'react-native-screens', 'dependencies')))
        implementation (waitJitpack('com.github.wordpress-mobile', 'react-native-safe-area-context', readHashedVersion('../../react-native-editor/package.json', 'react-native-safe-area-context', 'dependencies')))
        implementation (waitJitpack('com.github.wordpress-mobile', 'react-native-reanimated', readHashedVersion('../../react-native-editor/package.json', 'react-native-reanimated', 'dependencies')))

        // FIXME Temporary fix to get Jitpack builds to green while I work on a solution without hardcoded values.
        //def rnVersion = readReactNativeVersion('../package.json', 'peerDependencies')
        def rnVersion = '0.61.5'
        implementation "com.facebook.react:react-native:${rnVersion}"
    }

    debugImplementation files(hermesPath + "hermes-debug.aar")
    releaseImplementation files(hermesPath + "hermes-release.aar")
}

// Allows to override the artifact version by passing a -PbintrayVersion
// parameter when calling Gradle
def getBintrayVersion() {
  return project.properties['bintrayVersion'] ?: android.defaultConfig.versionName
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayKey') ? project.property('bintrayKey') : System.getenv('BINTRAY_KEY')
    publications = ['GutenbergMobilePublication']
    publish = true
    pkg {
        repo = 'maven'
        name = 'react-native-gutenberg-bridge'
        licenses = ['GPL-2.0']
        // FIXME: Once this works properly poit to 'wordpress-mobile'
        userOrg = 'mokagio'
        // FIXME: Once this works properly poit to the original gutenberg (or gutenberg-mobile) repo. See also: https://github.com/oguzkocer/gutenberg/commit/0ca71b1abe3ea22b77abb3f390534e66e39161d5#diff-320e7dacc9e9a83ac8128d299319f82cf6dfa2609e0ebbc043d13de33ea92773R350-R353
        vcsUrl = 'https://github.com/wordpress-mobile/gutenberg-mobile.git'
        version {
            name = getBintrayVersion()
            released  = new Date()
        }
    }
}

project.afterEvaluate {
    publishing {
        publications {
            GutenbergMobilePublication(MavenPublication) {
                artifact bundleReleaseAar

                groupId 'com.github.wordpress-mobile.gutenberg-mobile'
                artifactId 'react-native-gutenberg-bridge'
                version getBintrayVersion()

                addDependenciesToPom(pom)
            }
        }
    }
}

// This is a workaround for adding the dependencies of the library. It's brought from the
// plugin's README file: https://github.com/bintray/gradle-bintray-plugin/blob/1.8.5/README.md
def addDependenciesToPom(pom) {
    pom.withXml {
        def dependenciesNode = asNode().getAt('dependencies')[0] ?: asNode().appendNode('dependencies')

        // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
        configurations.implementation.allDependencies.each {
            // Ensure dependencies such as fileTree are not included.
            if (it.name != 'unspecified') {
                def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
            }
        }
    }
}
